LIMIARES DO TWDTW PARA ESTABELECER NÍVEL DE CORTE PARA PASTAGEM
========================================================
author: CLAUDINEI OLIVEIRA-SANTOS
date: 15-09-2017
autosize: true

Definindo limiares
========================================================

inserir figura com exemplos de limiares


Limiares de cada padrão
========================================================

```{r packFun, echo=FALSE, message=FALSE, warning=FALSE}
#Pacotes e funcoes
library(dtwSat)
log_fun <- logisticWeight(alpha = -0.1, beta = 100) 
```


```{r files, echo=FALSE, message=FALSE, warning=FALSE}
#Padroes
load('/hds/ssd/DATASAN/result/twdtw/patt_pastagem.RData')

#Limiares
limiar1 <- read.csv("/hds/ssd/limiaresTWDTW/limiar_grupo1.csv", sep = ";", dec = ",")
limiar2 <- read.csv("/hds/ssd/limiaresTWDTW/limiar_grupo2.csv", sep = ";", dec = ",")
limiar3 <- read.csv("/hds/ssd/limiaresTWDTW/limiar_grupo3.csv", sep = ";", dec = ",")
limiar4 <- read.csv("/hds/ssd/limiaresTWDTW/limiar_grupo4.csv", sep = ";", dec = ",")
```

```{r patLim, echo=FALSE, message=FALSE, warning=FALSE}
#timeline
timeline <- time(dados_patt@timeseries$pastagem_1)

#Padroes
padrao1 <- as.numeric(dados_patt@timeseries$pastagem_1)
padrao2 <- as.numeric(dados_patt@timeseries$pastagem_2)
padrao3 <- as.numeric(dados_patt@timeseries$pastagem_3)
padrao4 <- as.numeric(dados_patt@timeseries$pastagem_4)

#Limiares
names(limiar1) <- c("id", "upper1", "lower1")
names(limiar2) <- c("id", "upper2", "lower2")
names(limiar3) <- c("id", "upper3", "lower3")
names(limiar4) <- c("id", "upper4", "lower4")

#padroes e limiares
patLim <- cbind(padrao1, limiar1[,-1],
                padrao2, limiar2[,-1],
                padrao3, limiar3[,-1],
                padrao4, limiar4[,-1])

#matrix
patLim <- as.matrix(patLim)

#zoo matrix
TSzoo <- zoo(patLim, timeline)

#timeserie twdtw
ts1 <- twdtwTimeSeries(TSzoo[,1:3])
ts2 <- twdtwTimeSeries(TSzoo[,4:6])
ts3 <- twdtwTimeSeries(TSzoo[,7:9])
ts4 <- twdtwTimeSeries(TSzoo[,10:12])

#plot ts
# plot(ts1, type = "timeseries")
# plot(ts2, type = "timeseries")
# plot(ts3, type = "timeseries")
# plot(ts4, type = "timeseries")

plot(padrao1, ylim = c(0,1), t = "l", col = "black", main = "PADRAO 1")
lines(limiar1[,2], ylim = c(0,1), col = "red", lty = 2)
lines(limiar1[,3], ylim = c(0,1), col = "red", lty = 2)

plot(padrao2, ylim = c(0,1), t = "l", col = "black", main = "PADRAO 2")
lines(limiar2[,2], ylim = c(0,1), col = "red", lty = 2)
lines(limiar2[,3], ylim = c(0,1), col = "red", lty = 2)

plot(padrao3, ylim = c(0,1), t = "l", col = "black", main = "PADRAO 3")
lines(limiar3[,2], ylim = c(0,1), col = "red", lty = 2)
lines(limiar3[,3], ylim = c(0,1), col = "red", lty = 2)

plot(padrao4, ylim = c(0,1), t = "l", col = "black", main = "PADRAO 4")
lines(limiar4[,2], ylim = c(0,1), col = "red", lty = 2)
lines(limiar4[,3], ylim = c(0,1), col = "red", lty = 2)

```



Slide With Plot
========================================================


```{r limiar 1 Upper, echo=FALSE, message=FALSE, warning=FALSE}
ts <- twdtwTimeSeries(
  zoo(
    as.matrix(limiar1[,2]),
    timeline))

matches <- twdtwApply(x = ts, y = dados_patt, weight.fun = log_fun, keep = TRUE) 

c("dist_patt 1 = ", as.numeric(round(matches@alignments[[1]]$pastagem_1$distance,2)))
c("dist_patt 2 = ", as.numeric(round(matches@alignments[[1]]$pastagem_2$distance,2)))
c("dist_patt 3 = ", as.numeric(round(matches@alignments[[1]]$pastagem_3$distance,2)))
c("dist_patt 4 = ", as.numeric(round(matches@alignments[[1]]$pastagem_4$distance,2)))

plot(x = matches, type = "alignments")
plot(x = matches, type = "paths", k <- 1:4) 
```


